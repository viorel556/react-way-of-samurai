{"version":3,"file":"static/js/476.65415211.chunk.js","mappings":"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","sources":["webpack://react-way-of-samurai/./src/components/common/Paginator/Paginator.module.css?6caa","components/common/Paginator/Paginator.tsx","webpack://react-way-of-samurai/./src/components/Users/users.module.css?9211","components/Users/User.tsx","components/Users/UsersSearchForm.tsx","utils/validators/FormikUtils.ts","components/Users/Users.tsx","components/Users/UsersPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"userPhoto\":\"Paginator_userPhoto__EG-ey\",\"paginator\":\"Paginator_paginator__nDK9Q\",\"pageNumber\":\"Paginator_pageNumber__7O7BU\",\"selectedPage\":\"Paginator_selectedPage__CRNLp\"};","\nimport styles from \"./Paginator.module.css\";\nimport React, {useState} from \"react\";\nimport cn from \"classnames\";\nimport {Button} from \"antd\";\n\ntype PropsType = {\n    totalItemsCount: number\n    pageSize: number\n    currentPage: number\n    onPageChanged: (pageNumber: number) => void\n    portionSize?: number\n}\nlet Paginator: React.FC<PropsType> = ({\n                                          totalItemsCount,\n                                          pageSize,\n                                          currentPage,\n                                          onPageChanged,\n                                          portionSize = 10\n                                      }) => {\n\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\n    let pages: Array<number> = [];\n\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n\n    let portionCount = Math.ceil(pagesCount / portionSize);\n    let [portionNumber, setPortionNumber] = useState(1);\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n    let rightPortionPageNumber = portionNumber * portionSize;\n\n    return (\n\n        <div className={styles.paginator}>\n            {\n                portionNumber > 1 &&\n                <Button onClick={() => {\n                    setPortionNumber(portionNumber - 1)\n                }}>PREV</Button>\n            }\n\n            {\n                pages\n                    .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\n                    .map((p) => {\n\n                        return <Button className={cn({\n                            [styles.selectedPage]: currentPage === p\n                        }, styles.pageNumber)}\n                                     key={p}\n                                     onClick={(e) => {\n                                         onPageChanged(p);\n                                     }}>{p}</Button>\n                    })\n            }\n\n            {\n                portionCount > portionNumber &&\n                <Button onClick={() => {\n                    setPortionNumber(portionNumber + 1)\n                }}>NEXT</Button>\n            }\n\n        </div>\n    );\n}\n\nexport default Paginator;","// extracted by mini-css-extract-plugin\nexport default {\"userPhoto\":\"users_userPhoto__sKbuw\",\"selectedPage\":\"users_selectedPage__kfszz\",\"userContainer\":\"users_userContainer__GxoWz\",\"followUnfollowContainer\":\"users_followUnfollowContainer__fBkFD\",\"usersContainer\":\"users_usersContainer__QZHtT\",\"searchBarContainer\":\"users_searchBarContainer__BX1h9\"};","import styles from \"./users.module.css\";\nimport userPhoto from \"../../assets/images/user.png\";\nimport React, {FC} from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport {UserType} from \"../../types/types.ts\";\nimport {Button} from \"antd\";\n\ntype PropsType = {\n    user: UserType,\n    followingInProgress: Array<number>,\n    unfollowUser: (userId: number) => void\n    followUser: (userId: number) => void\n}\n\nconst User: FC<PropsType> = ({user, followingInProgress, unfollowUser, followUser}) => {\n\n    return (\n\n        <div className={styles.userContainer}>\n            <span>\n                <div>\n                    <NavLink to={'/profile/' + user.id}>\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto}\n                             className={styles.userPhoto} alt={'image profile'}/>\n                    </NavLink>\n                </div>\n\n                <div className={styles.followUnfollowContainer}>\n                    {user.followed ? <Button type={'primary'} disabled={followingInProgress.some(id => id === user.id)}\n                                             onClick={() => {\n                                                 // CALLING A THUNK:\n                                                 unfollowUser(user.id);\n                                             }}>Unfollow</Button>\n\n                                    : <Button disabled={followingInProgress.some(id => id === user.id)}\n                                        onClick={() => {\n                                            // CALLING A THUNK:\n                                            followUser(user.id)\n                                        }}>Follow</Button>}\n                </div>\n            </span>\n\n\n            <span>\n                <span>\n                    <b>{user.name}</b> <div>{user.status}</div>\n                </span>\n\n                <span>\n                    <div>{\"user.location.country\"}</div>\n                    <div>{\"user.location.city\"}</div>\n                </span>\n            </span>\n        </div>\n\n\n    );\n}\n\nexport default User;","import {Field, Form, Formik} from \"formik\";\nimport React, {FC, memo} from \"react\";\nimport {FilterType} from \"../../redux/users-reducer.ts\";\nimport {SearchFormType} from \"../../types/types.ts\";\nimport {searchBarFormTypeConvertor} from \"../../utils/validators/FormikUtils.ts\";\nimport classes from './users.module.css';\n\n// TYPES:\ntype PropsType = { onFilterChanged: (filter: FilterType) => void; }\ntype SetSubmittingType = { setSubmitting: (isSubmitting: boolean) => void; }\n\nfunction usersSearchFormValidate(values) { // VALIDATION LOGIC: (not set yet)\n    const errors = {};\n    return errors;\n}\n\nexport const UsersSearchForm: FC<PropsType> = memo(({onFilterChanged}) => {\n    // THE SEARCH BAR\n\n    const submit = (values: SearchFormType, {setSubmitting}: SetSubmittingType) => {\n        // [!]FORMIK: values-obj, has ALL values that we receive from form submission, even if its one field;\n        // we receive string for \"friend\" but want boolean, hence a utility was created:\n\n        // using a utility to convert form types to expected types:\n        const filter: FilterType = searchBarFormTypeConvertor(values);\n\n        onFilterChanged(filter);\n        setSubmitting(false);\n    }\n\n    return <div className={classes.searchBarContainer}>\n        <h1>Search an user</h1>\n        <p> Try Searching \"Viorel\". I have an original name. I'm pretty sure I'm still the only Viorel on the platform\n            :)) </p>\n\n        <Formik\n            initialValues={{term: '', friend: null}}\n            validate={usersSearchFormValidate}\n            onSubmit={submit}\n        >\n\n            {({isSubmitting}) => (\n                <Form>\n                    <Field type=\"text\" name=\"term\"/>\n\n                    <Field name=\"friend\" as=\"select\">\n                        <option value=\"null\">All Users</option>\n                        <option value=\"true\">Followed</option>\n                        <option value=\"false\">Unfollowed</option>\n                    </Field>\n\n                    <button type=\"submit\"> Search</button>\n                </Form>\n            )}\n        </Formik>\n    </div>\n});","import {SearchFormType} from \"../../types/types.ts\";\nimport {FilterType} from \"../../redux/users-reducer.ts\";\n\nexport function searchBarFormTypeConvertor(values: SearchFormType): FilterType {\n    /* FUNC converts the form types to expected FilterType */\n\n    let friend: boolean | null; // in this case only friend value is problematic;\n    switch(values.friend) {\n        case \"true\": friend = true; break;\n        case \"false\": friend = false; break;\n        default: friend = null; break;\n    }\n    return {\n        term: values.term,\n        friend: friend\n    }\n}","import React, {FC, useEffect} from \"react\";\nimport Paginator from \"../common/Paginator/Paginator\";\nimport User from \"./User\";\nimport {AppDispatchType} from \"../../types/types\";\nimport {UsersSearchForm} from \"./UsersSearchForm.tsx\";\nimport {FilterType, followUser, getUsers, unfollowUser} from \"../../redux/users-reducer.ts\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {createSearchParams, NavigateFunction, useLocation, useNavigate} from 'react-router-dom';\nimport styles from \"./users.module.css\";\nimport {\n    getAllUsers,\n    getCurrentPage,\n    getFollowingInProgress, getPageSize,\n    getTotalUsersCount,\n    getUsersFilter\n} from \"../../redux/selectors/selectors.ts\";\n\nexport const Users: FC = () => {\n\n    const dispatch: AppDispatchType = useDispatch(); // DISPATCH\n\n    // SELECTORS:\n    const currentPage = useSelector(getCurrentPage)\n    const totalUsersCount = useSelector(getTotalUsersCount)\n    const pageSize = useSelector(getPageSize)\n    const users = useSelector(getAllUsers)\n    const filter = useSelector(getUsersFilter)\n    const followingInProgress = useSelector(getFollowingInProgress)\n\n    // CALLBACKS:\n    const onPageChanged = (pageNumber: number) => {\n        dispatch(getUsers(pageNumber, pageSize, filter));\n    }\n    const onFilterChanged = (filter: FilterType) => {\n        dispatch(getUsers(1, pageSize, filter));\n        // hard codding the current page to 1; (first results)\n    }\n    const follow = (userId: number) => {\n        dispatch(followUser(userId));\n    }\n    const unfollow = (userId: number) => {\n        dispatch(unfollowUser(userId));\n    }\n\n    // LOADING DATA:\n    useEffect(() => {\n        dispatch(getUsers(currentPage, pageSize, filter));\n    }, []);\n\n\n    // URL PARAMS LOGIC:\n    const useNavigateSearch = () => {\n        // making a custom hook:\n        const navigate = useNavigate();\n        return (pathname, params) => navigate(`${pathname}?${createSearchParams(params)}`);\n    };\n    const navigateSearch = useNavigateSearch();\n    const location = useLocation();\n\n    // EFFECT 1:\n    useEffect(() => {\n        // ^ Is triggered when the filter changes\n        navigateSearch(\"/users\", {\n            page: `${currentPage}`,\n            count: `${pageSize}`,\n            term: `${filter.term}`,\n            friend: `${filter.friend}`,\n        });\n    }, [filter, currentPage, pageSize]);\n\n    // EFFECT 2:\n    useEffect(() => {\n        const query = new URLSearchParams(location.search);\n\n        let actualPage = currentPage;\n        let actualFilter = filter;\n\n        const queryFriend = query.get(\"friend\");\n        const queryPage = query.get(\"page\");\n        const queryTerm = query.get(\"term\");\n\n        if (queryPage) actualPage = +queryPage;\n\n        if (queryTerm) {\n            actualFilter = {...actualFilter, term: queryTerm};\n        }\n\n        switch (queryFriend) {\n            case \"null\":\n                actualFilter = {...actualFilter, friend: null};\n                break;\n\n            case \"true\":\n                actualFilter = {...actualFilter, friend: true};\n                break;\n\n            case \"false\":\n                actualFilter = {...actualFilter, friend: false};\n                break;\n\n            default: break;\n        }\n        dispatch(getUsers(actualPage, pageSize, actualFilter));\n    }, [location.search]);\n\n\n    return (\n        <div>\n            <UsersSearchForm onFilterChanged={onFilterChanged}/>\n\n            <Paginator currentPage={currentPage}\n                       onPageChanged={onPageChanged}\n                       totalItemsCount={totalUsersCount}\n                       pageSize={pageSize}\n            />\n\n            <div className={styles.usersContainer}>\n                {\n                    users.map(u => <User user={u}\n                                         followingInProgress={followingInProgress}\n                                         unfollowUser={unfollow}\n                                         followUser={follow}\n                    />)\n                }\n            </div>\n        </div>\n    );\n}","import React, {FC} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {Users} from \"./Users\";\nimport Preloader from \"../common/Preloader/Preloader\";\n\nimport {getIsFetching} from \"../../redux/selectors/selectors.ts\";\n\n\nconst UsersPage: FC = () => {\n    // THIS CONTAINER DID HAVE: withAuthRedirect();\n\n    const isFetching = useSelector(getIsFetching);\n\n    return (\n        <>\n            {isFetching ? <Preloader/> : null}\n            <Users/>\n        </>\n    )\n}\n\nexport default UsersPage;\n\n"],"names":["_ref","totalItemsCount","pageSize","currentPage","onPageChanged","_ref$portionSize","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","_useState","useState","_useState2","_slicedToArray","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","_jsxs","className","styles","children","_jsx","Button","onClick","filter","p","map","cn","_defineProperty","e","user","followingInProgress","unfollowUser","followUser","NavLink","to","id","src","photos","small","userPhoto","alt","followed","type","disabled","some","name","status","usersSearchFormValidate","values","UsersSearchForm","memo","onFilterChanged","classes","Formik","initialValues","term","friend","validate","onSubmit","_ref2","setSubmitting","searchBarFormTypeConvertor","_ref3","isSubmitting","Form","Field","as","value","Users","dispatch","useDispatch","useSelector","getCurrentPage","totalUsersCount","getTotalUsersCount","getPageSize","users","getAllUsers","getUsersFilter","getFollowingInProgress","follow","userId","unfollow","useEffect","getUsers","navigateSearch","navigate","useNavigate","pathname","params","concat","createSearchParams","useNavigateSearch","location","useLocation","page","count","query","URLSearchParams","search","actualPage","actualFilter","queryFriend","get","queryPage","queryTerm","_objectSpread","Paginator","pageNumber","u","User","isFetching","getIsFetching","_Fragment","Preloader"],"sourceRoot":""}